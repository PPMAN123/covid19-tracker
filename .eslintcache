[{"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\index.js":"1","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\App.js":"2","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\SummaryContext.js":"3","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\pages\\HomePage.js":"4","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\SummaryCard.js":"5","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BounceLoader.js":"6","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ReportContext.js":"7","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\Table.js":"8","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ProvinceContext.js":"9","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BaseChart.js":"10","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\ProvinceComparisonChart.js":"11","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\CumulativeChart.js":"12","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hooks\\useDimension.js":"13"},{"size":196,"mtime":1609698983779,"results":"14","hashOfConfig":"15"},{"size":728,"mtime":1611515207649,"results":"16","hashOfConfig":"15"},{"size":1991,"mtime":1611948469411,"results":"17","hashOfConfig":"15"},{"size":3636,"mtime":1613933793338,"results":"18","hashOfConfig":"15"},{"size":5290,"mtime":1613933664031,"results":"19","hashOfConfig":"15"},{"size":784,"mtime":1612721551583,"results":"20","hashOfConfig":"15"},{"size":1639,"mtime":1610910519148,"results":"21","hashOfConfig":"15"},{"size":7627,"mtime":1612721215046,"results":"22","hashOfConfig":"15"},{"size":2084,"mtime":1612116209229,"results":"23","hashOfConfig":"15"},{"size":1729,"mtime":1612724172794,"results":"24","hashOfConfig":"15"},{"size":2725,"mtime":1612724273865,"results":"25","hashOfConfig":"15"},{"size":2851,"mtime":1612718916856,"results":"26","hashOfConfig":"15"},{"size":818,"mtime":1612723750819,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1mbd73d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\index.js",[],["60","61"],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\App.js",["62"],"import {\n  Switch,\n  Route,\n  BrowserRouter as Router\n} from 'react-router-dom'\nimport { useSummary, SummaryProvider } from './context/SummaryContext'\nimport { ReportProvider } from './context/ReportContext'\nimport HomePage from './pages/HomePage'\nimport {ProvinceProvider} from './context/ProvinceContext'\n\nfunction App() {\n  return (\n    <Router>\n      <SummaryProvider>\n        <ReportProvider>\n          <ProvinceProvider>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n              >\n                <HomePage/>\n              </Route>\n            </Switch>\n          </ProvinceProvider>\n        </ReportProvider>\n      </SummaryProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\SummaryContext.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\pages\\HomePage.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\SummaryCard.js",["63","64","65","66","67"],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BounceLoader.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ReportContext.js",["68"],"import {\r\n    useContext,\r\n    createContext,\r\n    useState,\r\n    useEffect\r\n}\r\nfrom 'react'\r\nimport axios from 'axios'\r\n\r\nconst ReportContext = createContext({});\r\n\r\nconst defaultValue = {\r\n    dataPoints: [],\r\n    loadingState: 'none'\r\n}\r\n\r\nconst ReportProvider = ({ children, value, ...rest }) => {\r\n    const [report, setReports] = useState(value || defaultValue)\r\n\r\n    useEffect(async () => {\r\n        const dataFetch = async () =>{\r\n            setReports(prevReport =>{\r\n                const newReport = Object.assign({}, prevReport);\r\n                newReport.loadingState = 'loading';\r\n                return newReport;\r\n            })\r\n            const response = await axios.get('/.netlify/functions/node-fetch/?endpoint=reports')\r\n            const { data } = response\r\n            if(data){\r\n                const reportData = data.data;\r\n                setTimeout(() => {setReports(prevReport =>{\r\n                    const newReport =  Object.assign({}, prevReport, { dataPoints: reportData });\r\n                    newReport.loadingState = 'complete';\r\n                    return newReport;\r\n                })\r\n                }, 1)\r\n            }\r\n        }\r\n        dataFetch();\r\n    }, [])\r\n\r\n    return (\r\n        <ReportContext.Provider\r\n            value={{\r\n                report,\r\n                setReports\r\n            }}\r\n            {...rest}\r\n        >\r\n            { children }\r\n        </ReportContext.Provider>\r\n    )\r\n}\r\n\r\nconst useReport = () =>{\r\n    const { report, setReports } = useContext(ReportContext);\r\n    return { report, setReports };\r\n}\r\n\r\nexport{\r\n    ReportProvider,\r\n    useReport\r\n}","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\Table.js",["69","70","71","72","73"],"import React, {useState, useEffect} from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    Toolbar,\r\n    Typography,\r\n    Paper,\r\n} from '@material-ui/core'\r\nimport {useProvinces} from '../context/ProvinceContext'\r\n\r\n\r\nfunction createData(Province, Cases, Deaths, Tests, Hospitalizations, Criticals, Recoveries, Vaccinated) {\r\n  return { Province, Cases, Deaths, Tests, Hospitalizations, Criticals, Recoveries, Vaccinated };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'Province', numeric: false, disablePadding: false, label: 'Provinces' },\r\n  { id: 'Cases', numeric: true, disablePadding: false, label: 'Cases' },\r\n  { id: 'Deaths', numeric: true, disablePadding: false, label: 'Deaths' },\r\n  { id: 'Tests', numeric: true, disablePadding: false, label: 'Tests' },\r\n  { id: 'Hospitalizations', numeric: true, disablePadding: false, label: 'Hospitalizations' },\r\n  { id: 'Criticals', numeric: true, disablePadding: false, label: 'Criticals' },\r\n  { id: 'Recoveries', numeric: true, disablePadding: false, label: 'Recoveries' },\r\n  { id: 'Vaccinated', numeric: true, disablePadding: false, label: 'Vaccinated' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classes.root}\r\n    >\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n            Stats by Province\r\n        </Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [page, setPage] = React.useState(0);\r\n  const {province,provinceCodeMapping} = useProvinces();\r\n  const [rows, setRows] = useState([]);\r\n  useEffect(() => {\r\n      console.log(province)\r\n      if(province){\r\n          const {dataPoints} = province;\r\n          setRows(dataPoints.map(provinceData =>{\r\n              return createData(\r\n                  provinceCodeMapping[provinceData.province],\r\n                  provinceData.total_cases,\r\n                  provinceData.total_fatalities,\r\n                  provinceData.total_tests,\r\n                  provinceData.total_hospitalizations,\r\n                  provinceData.total_criticals,\r\n                  provinceData.total_recoveries,\r\n                  provinceData.total_vaccinations\r\n              )\r\n          }))\r\n      }\r\n  }, [province])\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  console.log(rows);\r\n  console.log(stableSort(rows, getComparator(order, orderBy)));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.Province}\r\n                    >\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                        {row.Province}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.Cases}</TableCell>\r\n                      <TableCell align=\"left\">{row.Deaths}</TableCell>\r\n                      <TableCell align=\"left\">{row.Tests}</TableCell>\r\n                      <TableCell align=\"left\">{row.Hospitalizations}</TableCell>\r\n                      <TableCell align=\"left\">{row.Criticals}</TableCell>\r\n                      <TableCell align=\"left\">{row.Recoveries}</TableCell>\r\n                      <TableCell align=\"left\">{row.Vaccinated}</TableCell>\r\n                      {/* Cases, Deaths, Tests, Hospitalizations, Criticals, Recoveries, Vaccinated */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ProvinceContext.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BaseChart.js",["74","75","76"],"import { useEffect, useRef, useState } from 'react'\r\nimport Chart from 'chart.js'\r\nimport { Card, CardContent, makeStyles } from '@material-ui/core'\r\nimport useDimension from '../hooks/useDimension'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    cardContent : {\r\n        width: '100%',\r\n        position: 'relative',\r\n        height: 400\r\n    }\r\n})\r\n\r\n\r\n\r\nconst BaseChart = ({ type, chartDataset, chartXAxes, title }) => {\r\n    const chart = useRef();\r\n    const [ctx, setCtx] = useState(null);\r\n    const c = useStyles()\r\n    const [chartInstance, setChartInstance] = useState(null)\r\n\r\n    useEffect(() =>{\r\n        setCtx(chart.current);\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n        if(ctx){\r\n            if(chartInstance){\r\n                chartInstance.destroy();\r\n            }\r\n            setChartInstance(new Chart(ctx, {\r\n                type: type,\r\n                data:{\r\n                    datasets: chartDataset\r\n                },\r\n                options:{\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                    title: {\r\n                        display: true,\r\n                        text: title,\r\n                        fontSize: 18,\r\n                    },\r\n                    elements: {\r\n                        point:{\r\n                            radius: 1.5\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        xAxes: chartXAxes\r\n                    }\r\n                }\r\n            }))\r\n        }\r\n    }, [ctx, chartDataset, chartXAxes, type])\r\n\r\n    return (\r\n        <Card className={c.cardContent} >\r\n            <canvas ref={chart} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default BaseChart","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\ProvinceComparisonChart.js",["77"],"import React from 'react'\r\nimport BaseChart from '../components/BaseChart'\r\nimport { useProvinces } from '../context/ProvinceContext'\r\nimport { useEffect, useState } from 'react' \r\nimport {cloneDeep} from 'lodash'\r\n\r\nconst dataFields = [\r\n    {\r\n        label: 'Total Cases',\r\n        data: [],\r\n        borderColor: '#000000',\r\n        backgroundColor: '#000000',\r\n        fieldName: 'total_cases'\r\n    },\r\n    {\r\n        label: 'Total Recoveries',\r\n        data: [],\r\n        borderColor: '#893168',\r\n        backgroundColor: '#893168',\r\n        fieldName: 'total_recoveries',\r\n        hidden: true\r\n    },\r\n    {\r\n        label: 'Total Deaths',\r\n        data: [],\r\n        borderColor: '#1098F7',\r\n        backgroundColor: '#1098F7',\r\n        fieldName: 'total_fatalities',\r\n        hidden: true\r\n    },\r\n    {\r\n        label: 'Total Hospitalizations',\r\n        data: [],\r\n        borderColor: '#CCCCCC',\r\n        backgroundColor: '#CCCCCC',\r\n        fieldName: 'total_hospitalizations',\r\n        hidden: true\r\n    },\r\n    {\r\n        label: 'Total Tests',\r\n        data: [],\r\n        borderColor: '#B89E97',\r\n        backgroundColor: '#B89E97',\r\n        fieldName: 'total_tests',\r\n        hidden: true\r\n    }\r\n]\r\n\r\nconst ProvinceComparisonChart = ({children, ...rest}) => {\r\n    const { province, provinceCodeMapping } = useProvinces()\r\n    const [chartDataSet, setChartDataSet] = useState(dataFields)\r\n    const [chartXAxes, setChartXAxes] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(province.dataPoints.length > 0){\r\n            const sortedProvinces = province.dataPoints.sort((a,b) => b.total_cases - a.total_cases )\r\n            setChartXAxes([{\r\n                type: 'category',\r\n                labels: sortedProvinces.map(p => provinceCodeMapping[p.province])\r\n            }])\r\n            setChartDataSet(prevChartDataSet =>{\r\n                const newChartDataSet = cloneDeep(prevChartDataSet);\r\n                return newChartDataSet.map(dataSet => {\r\n                    const { fieldName } = dataSet;\r\n                    dataSet.data = sortedProvinces.map(p => {\r\n                        return {\r\n                            x: provinceCodeMapping[p.province],\r\n                            y: p[fieldName]\r\n                        }\r\n                    })\r\n                    return dataSet;\r\n                })\r\n            })\r\n        }\r\n    }, [province])\r\n\r\n    return (\r\n        <BaseChart\r\n            type='bar'\r\n            data={province}\r\n            chartDataset={chartDataSet}\r\n            chartXAxes={chartXAxes}\r\n            title='Stats by Province'\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </BaseChart>\r\n    )\r\n}\r\n\r\nexport default ProvinceComparisonChart","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\CumulativeChart.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hooks\\useDimension.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":20},{"ruleId":"82","severity":1,"message":"86","line":2,"column":29,"nodeType":"84","messageId":"85","endLine":2,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":74,"column":8,"nodeType":"89","endLine":74,"endColumn":21,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":79,"column":61,"nodeType":"93","messageId":"94","endLine":79,"endColumn":63},{"ruleId":"87","severity":1,"message":"95","line":87,"column":8,"nodeType":"89","endLine":87,"endColumn":21,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":105,"column":8,"nodeType":"89","endLine":105,"endColumn":30,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"99","line":20,"column":15,"nodeType":"100","endLine":40,"endColumn":6},{"ruleId":"82","severity":1,"message":"101","line":9,"column":5,"nodeType":"84","messageId":"85","endLine":9,"endColumn":20},{"ruleId":"82","severity":1,"message":"102","line":61,"column":36,"nodeType":"84","messageId":"85","endLine":61,"endColumn":44},{"ruleId":"82","severity":1,"message":"103","line":157,"column":10,"nodeType":"84","messageId":"85","endLine":157,"endColumn":14},{"ruleId":"87","severity":1,"message":"104","line":177,"column":6,"nodeType":"89","endLine":177,"endColumn":16,"suggestions":"105"},{"ruleId":"82","severity":1,"message":"106","line":185,"column":9,"nodeType":"84","messageId":"85","endLine":185,"endColumn":25},{"ruleId":"82","severity":1,"message":"107","line":3,"column":16,"nodeType":"84","messageId":"85","endLine":3,"endColumn":27},{"ruleId":"82","severity":1,"message":"108","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":20},{"ruleId":"87","severity":1,"message":"109","line":56,"column":8,"nodeType":"89","endLine":56,"endColumn":45,"suggestions":"110"},{"ruleId":"87","severity":1,"message":"104","line":75,"column":8,"nodeType":"89","endLine":75,"endColumn":18,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useSummary' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'amount'. Either include it or remove the dependency array.","ArrayExpression",["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'amount' and 'secondaryAmount'. Either include them or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'secondaryAmount'. Either include it or remove the dependency array.",["116"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'TablePagination' is defined but never used.","'rowCount' is assigned a value but never used.","'page' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'provinceCodeMapping'. Either include it or remove the dependency array.",["117"],"'handleChangePage' is assigned a value but never used.","'CardContent' is defined but never used.","'useDimension' is defined but never used.","React Hook useEffect has missing dependencies: 'chartInstance' and 'title'. Either include them or remove the dependency array. If 'setChartInstance' needs the current value of 'title', you can also switch to useReducer instead of useState and read 'title' in the reducer.",["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"126","fix":"130"},"Update the dependencies array to be: [amount, amountItems]",{"range":"131","text":"132"},"Update the dependencies array to be: [amount, amountItems, secondaryAmount]",{"range":"133","text":"134"},"Update the dependencies array to be: [secondaryAmount, secondaryAmountItems]",{"range":"135","text":"136"},"Update the dependencies array to be: [province, provinceCodeMapping]",{"range":"137","text":"138"},"Update the dependencies array to be: [ctx, chartDataset, chartXAxes, type, chartInstance, title]",{"range":"139","text":"140"},{"range":"141","text":"138"},[2204,2217],"[amount, amountItems]",[2748,2761],"[amount, amountItems, secondaryAmount]",[3587,3609],"[secondaryAmount, secondaryAmountItems]",[5301,5311],"[province, provinceCodeMapping]",[1541,1578],"[ctx, chartDataset, chartXAxes, type, chartInstance, title]",[2376,2386]]