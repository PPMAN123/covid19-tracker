[{"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\index.js":"1","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\App.js":"2","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\SummaryContext.js":"3","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\pages\\HomePage.js":"4","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\SummaryCard.js":"5","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BounceLoader.js":"6","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ReportContext.js":"7","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\Table.js":"8","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ProvinceContext.js":"9","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BaseChart.js":"10","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\ProvinceComparisonChart.js":"11","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\CumulativeChart.js":"12"},{"size":196,"mtime":1609698983779,"results":"13","hashOfConfig":"14"},{"size":728,"mtime":1611515207649,"results":"15","hashOfConfig":"14"},{"size":1991,"mtime":1611948469411,"results":"16","hashOfConfig":"14"},{"size":3236,"mtime":1612188794577,"results":"17","hashOfConfig":"14"},{"size":1567,"mtime":1610906785850,"results":"18","hashOfConfig":"14"},{"size":785,"mtime":1610904094910,"results":"19","hashOfConfig":"14"},{"size":1639,"mtime":1610910519148,"results":"20","hashOfConfig":"14"},{"size":7626,"mtime":1612114940982,"results":"21","hashOfConfig":"14"},{"size":2084,"mtime":1612116209229,"results":"22","hashOfConfig":"14"},{"size":1346,"mtime":1612120848299,"results":"23","hashOfConfig":"14"},{"size":2656,"mtime":1612120829135,"results":"24","hashOfConfig":"14"},{"size":2868,"mtime":1612189522691,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tzohnx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\index.js",[],["56","57"],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\App.js",["58"],"import {\n  Switch,\n  Route,\n  BrowserRouter as Router\n} from 'react-router-dom'\nimport { useSummary, SummaryProvider } from './context/SummaryContext'\nimport { ReportProvider } from './context/ReportContext'\nimport HomePage from './pages/HomePage'\nimport {ProvinceProvider} from './context/ProvinceContext'\n\nfunction App() {\n  return (\n    <Router>\n      <SummaryProvider>\n        <ReportProvider>\n          <ProvinceProvider>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n              >\n                <HomePage/>\n              </Route>\n            </Switch>\n          </ProvinceProvider>\n        </ReportProvider>\n      </SummaryProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\SummaryContext.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\pages\\HomePage.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\SummaryCard.js",["59"],"import React from 'react'\r\nimport { Card, CardContent, CardActions, Typography, makeStyles } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        color: 'grey',\r\n        fontSize: 18,\r\n    },\r\n    Typography: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        margin: '10px 0px'\r\n    },\r\n    descriptionText: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    card: {\r\n        width: 'min(100vw, 400px)',\r\n        height: 250\r\n    }\r\n})\r\n\r\n\r\nconst ChangeText = styled.span`\r\n    color: ${props => props.positive ? 'green' : 'red'};\r\n    margin-left: 6px;\r\n    font-size: 14px;\r\n`\r\n\r\nconst SummaryCard = ({ amount, secondaryAmount, title, description }) => {\r\n    const c = useStyles()\r\n    return (\r\n        <Card className={c.card}>\r\n            <CardContent>\r\n                <Typography className={c.title}>\r\n                    { title }\r\n                </Typography>\r\n                <Typography className={c.Typography}>\r\n                    { new Intl.NumberFormat().format(amount) }\r\n                    <ChangeText positive={secondaryAmount && secondaryAmount >= 0}>\r\n                        { new Intl.NumberFormat('en-US', {signDisplay: 'always'}).format(secondaryAmount || 0)}\r\n                    </ChangeText>\r\n                </Typography>\r\n                <Typography className={c.descriptionText}>\r\n                    { description }\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SummaryCard\r\n","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BounceLoader.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ReportContext.js",["60"],"import {\r\n    useContext,\r\n    createContext,\r\n    useState,\r\n    useEffect\r\n}\r\nfrom 'react'\r\nimport axios from 'axios'\r\n\r\nconst ReportContext = createContext({});\r\n\r\nconst defaultValue = {\r\n    dataPoints: [],\r\n    loadingState: 'none'\r\n}\r\n\r\nconst ReportProvider = ({ children, value, ...rest }) => {\r\n    const [report, setReports] = useState(value || defaultValue)\r\n\r\n    useEffect(async () => {\r\n        const dataFetch = async () =>{\r\n            setReports(prevReport =>{\r\n                const newReport = Object.assign({}, prevReport);\r\n                newReport.loadingState = 'loading';\r\n                return newReport;\r\n            })\r\n            const response = await axios.get('/.netlify/functions/node-fetch/?endpoint=reports')\r\n            const { data } = response\r\n            if(data){\r\n                const reportData = data.data;\r\n                setTimeout(() => {setReports(prevReport =>{\r\n                    const newReport =  Object.assign({}, prevReport, { dataPoints: reportData });\r\n                    newReport.loadingState = 'complete';\r\n                    return newReport;\r\n                })\r\n                }, 1)\r\n            }\r\n        }\r\n        dataFetch();\r\n    }, [])\r\n\r\n    return (\r\n        <ReportContext.Provider\r\n            value={{\r\n                report,\r\n                setReports\r\n            }}\r\n            {...rest}\r\n        >\r\n            { children }\r\n        </ReportContext.Provider>\r\n    )\r\n}\r\n\r\nconst useReport = () =>{\r\n    const { report, setReports } = useContext(ReportContext);\r\n    return { report, setReports };\r\n}\r\n\r\nexport{\r\n    ReportProvider,\r\n    useReport\r\n}","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\Table.js",["61","62","63","64","65"],"import React, {useState, useEffect} from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    Toolbar,\r\n    Typography,\r\n    Paper,\r\n} from '@material-ui/core'\r\nimport {useProvinces} from '../context/ProvinceContext'\r\n\r\n\r\nfunction createData(Province, Cases, Deaths, Tests, Hospitalizations, Criticals, Recoveries, Vaccinated) {\r\n  return { Province, Cases, Deaths, Tests, Hospitalizations, Criticals, Recoveries, Vaccinated };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'Province', numeric: false, disablePadding: false, label: 'Provinces' },\r\n  { id: 'Cases', numeric: true, disablePadding: false, label: 'Cases' },\r\n  { id: 'Deaths', numeric: true, disablePadding: false, label: 'Deaths' },\r\n  { id: 'Tests', numeric: true, disablePadding: false, label: 'Tests' },\r\n  { id: 'Hospitalizations', numeric: true, disablePadding: false, label: 'Hospitalizations' },\r\n  { id: 'Criticals', numeric: true, disablePadding: false, label: 'Criticals' },\r\n  { id: 'Recoveries', numeric: true, disablePadding: false, label: 'Recoveries' },\r\n  { id: 'Vaccinated', numeric: true, disablePadding: false, label: 'Vaccinated' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classes.root}\r\n    >\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n            Stats by Province\r\n        </Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [page, setPage] = React.useState(0);\r\n  const {province,provinceCodeMapping} = useProvinces();\r\n  const [rows, setRows] = useState([]);\r\n  useEffect(() => {\r\n      console.log(province)\r\n      if(province){\r\n          const {dataPoints} = province;\r\n          setRows(dataPoints.map(provinceData =>{\r\n              return createData(\r\n                  provinceCodeMapping[provinceData.province],\r\n                  provinceData.total_cases,\r\n                  provinceData.total_fatalities,\r\n                  provinceData.total_tests,\r\n                  provinceData.total_hospitalizations,\r\n                  provinceData.total_criticals,\r\n                  provinceData.total_recoveries,\r\n                  provinceData.total_vaccinations\r\n              )\r\n          }))\r\n      }\r\n  }, [province])\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  console.log(rows);\r\n  console.log(stableSort(rows, getComparator(order, orderBy)));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.Province}\r\n                    >\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                        {row.Province}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.Cases}</TableCell>\r\n                      <TableCell align=\"left\">{row.Deaths}</TableCell>\r\n                      <TableCell align=\"left\">{row.Tests}</TableCell>\r\n                      <TableCell align=\"left\">{row.Hospitalizations}</TableCell>\r\n                      <TableCell align=\"left\">{row.Criticals}</TableCell>\r\n                      <TableCell align=\"left\">{row.Recoveries}</TableCell>\r\n                      <TableCell align=\"left\">{row.Vaccinated}</TableCell>\r\n                      {/* Cases, Deaths, Tests, Hospitalizations, Criticals, Recoveries, Vaccinated */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\context\\ProvinceContext.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\components\\BaseChart.js",[],"E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\ProvinceComparisonChart.js",["66"],"import React from 'react'\r\nimport BaseChart from '../components/BaseChart'\r\nimport { useProvinces } from '../context/ProvinceContext'\r\nimport { useEffect, useState } from 'react' \r\nimport {cloneDeep} from 'lodash'\r\n\r\nconst dataFields = [\r\n    {\r\n        label: 'Cases',\r\n        data: [],\r\n        borderColor: '#000000',\r\n        backgroundColor: '#000000',\r\n        fieldName: 'total_cases'\r\n    },\r\n    {\r\n        label: 'Recoveries',\r\n        data: [],\r\n        borderColor: '#893168',\r\n        backgroundColor: '#893168',\r\n        fieldName: 'total_recoveries',\r\n        hidden: true\r\n    },\r\n    {\r\n        label: 'Deaths',\r\n        data: [],\r\n        borderColor: '#1098F7',\r\n        backgroundColor: '#1098F7',\r\n        fieldName: 'total_fatalities',\r\n        hidden: true\r\n    },\r\n    {\r\n        label: 'Hospitalizations',\r\n        data: [],\r\n        borderColor: '#CCCCCC',\r\n        backgroundColor: '#CCCCCC',\r\n        fieldName: 'total_hospitalizations',\r\n        hidden: true\r\n    },\r\n    {\r\n        label: 'Tests',\r\n        data: [],\r\n        borderColor: '#B89E97',\r\n        backgroundColor: '#B89E97',\r\n        fieldName: 'total_tests',\r\n        hidden: true\r\n    }\r\n]\r\n\r\nconst ProvinceComparisonChart = ({children, ...rest}) => {\r\n    const { province, provinceCodeMapping } = useProvinces()\r\n    const [chartDataSet, setChartDataSet] = useState(dataFields)\r\n    const [chartXAxes, setChartXAxes] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(province.dataPoints.length > 0){\r\n            const sortedProvinces = province.dataPoints.sort((a,b) => b.total_cases - a.total_cases )\r\n            setChartXAxes([{\r\n                type: 'category',\r\n                labels: sortedProvinces.map(p => provinceCodeMapping[p.province])\r\n            }])\r\n            setChartDataSet(prevChartDataSet =>{\r\n                const newChartDataSet = cloneDeep(prevChartDataSet);\r\n                return newChartDataSet.map(dataSet => {\r\n                    const { fieldName } = dataSet;\r\n                    dataSet.data = sortedProvinces.map(p => {\r\n                        return {\r\n                            x: provinceCodeMapping[p.province],\r\n                            y: p[fieldName]\r\n                        }\r\n                    })\r\n                    return dataSet;\r\n                })\r\n            })\r\n        }\r\n    }, [province])\r\n\r\n    return (\r\n        <BaseChart\r\n            type='bar'\r\n            data={province}\r\n            chartDataset={chartDataSet}\r\n            chartXAxes={chartXAxes}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </BaseChart>\r\n    )\r\n}\r\n\r\nexport default ProvinceComparisonChart","E:\\Programming\\Web\\React Stuff\\covid-tracker\\src\\hoc\\CumulativeChart.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":20},{"ruleId":"72","severity":1,"message":"76","line":2,"column":29,"nodeType":"74","messageId":"75","endLine":2,"endColumn":40},{"ruleId":"77","severity":1,"message":"78","line":20,"column":15,"nodeType":"79","endLine":40,"endColumn":6},{"ruleId":"72","severity":1,"message":"80","line":9,"column":5,"nodeType":"74","messageId":"75","endLine":9,"endColumn":20},{"ruleId":"72","severity":1,"message":"81","line":61,"column":36,"nodeType":"74","messageId":"75","endLine":61,"endColumn":44},{"ruleId":"72","severity":1,"message":"82","line":157,"column":10,"nodeType":"74","messageId":"75","endLine":157,"endColumn":14},{"ruleId":"77","severity":1,"message":"83","line":177,"column":6,"nodeType":"84","endLine":177,"endColumn":16,"suggestions":"85"},{"ruleId":"72","severity":1,"message":"86","line":185,"column":9,"nodeType":"74","messageId":"75","endLine":185,"endColumn":25},{"ruleId":"77","severity":1,"message":"83","line":75,"column":8,"nodeType":"84","endLine":75,"endColumn":18,"suggestions":"87"},{"ruleId":"72","severity":1,"message":"88","line":56,"column":21,"nodeType":"74","messageId":"75","endLine":56,"endColumn":31},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useSummary' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'TablePagination' is defined but never used.","'rowCount' is assigned a value but never used.","'page' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'provinceCodeMapping'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'handleChangePage' is assigned a value but never used.",["92"],"'setReports' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},"Update the dependencies array to be: [province, provinceCodeMapping]",{"range":"96","text":"97"},{"range":"98","text":"97"},[5300,5310],"[province, provinceCodeMapping]",[2346,2356]]